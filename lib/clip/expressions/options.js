// Generated by CoffeeScript 1.6.2
var OptionsExpression, base,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

base = require("../../base/expression");

OptionsExpression = (function(_super) {
  __extends(OptionsExpression, _super);

  /*
  */


  OptionsExpression.prototype._type = "options";

  /*
  */


  function OptionsExpression(items) {
    this.items = items;
    OptionsExpression.__super__.constructor.call(this);
    this.addChild(items);
  }

  OptionsExpression.prototype.toString = function() {
    var buffer, item, params, _i, _len, _ref;

    buffer = ["{"];
    params = [];
    _ref = this.items;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      params.push("'" + item.name + "':" + item.expression);
    }
    buffer.push(params.join(","), "}");
    return buffer.join("");
  };

  return OptionsExpression;

})(base.Expression);

module.exports = OptionsExpression;
