// Generated by CoffeeScript 1.6.2
(function() {
  var Evaluator, RefExpression, base,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  base = require("./base");

  Evaluator = (function(_super) {
    __extends(Evaluator, _super);

    function Evaluator() {
      Evaluator.__super__.constructor.apply(this, arguments);
      this.name = this.expr.name;
    }

    Evaluator.prototype.toString = function() {
      return this.name;
    };

    return Evaluator;

  })(base.Evaluator);

  RefExpression = (function() {
    RefExpression.prototype._type = "ref";

    function RefExpression(name) {
      this.name = name;
    }

    RefExpression.prototype.evaluate = function(context) {
      return new Evaluator(this, context);
    };

    return RefExpression;

  })();

  module.exports = RefExpression;

}).call(this);
