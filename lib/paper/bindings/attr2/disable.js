// Generated by CoffeeScript 1.6.2
var DisableDecor, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

DisableDecor = (function(_super) {
  __extends(DisableDecor, _super);

  function DisableDecor() {
    this._show = __bind(this._show, this);    _ref = DisableDecor.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  DisableDecor.prototype.bind = function() {
    DisableDecor.__super__.bind.call(this);
    this.$element = $(this.element);
    this.clip.bind("disable").to(this._show).now();
    return this._show(this.clip.get("disable"));
  };

  /*
  */


  DisableDecor.prototype._show = function(value) {
    if (value) {
      return this.$element.attr("disabled", "disabled");
    } else {
      return this.$element.removeAttr("disabled", "disabled");
    }
  };

  return DisableDecor;

})(require("./dataBind"));

module.exports = DisableDecor;
