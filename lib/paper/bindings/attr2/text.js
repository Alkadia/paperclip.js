// Generated by CoffeeScript 1.6.2
var TextBinding, escapeHTML,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

escapeHTML = require("../../utils/escapeHTML");

TextBinding = (function(_super) {
  __extends(TextBinding, _super);

  /*
  */


  function TextBinding(node, attrName, clippedBuffer) {
    this.attrName = attrName;
    this.clippedBuffer = clippedBuffer;
    this._onChange = __bind(this._onChange, this);
    TextBinding.__super__.constructor.call(this, node);
  }

  /*
  */


  TextBinding.prototype.bind = function() {
    TextBinding.__super__.bind.call(this);
    return this.clippedBuffer.bind("text").to(this._onChange);
  };

  /*
  */


  TextBinding.prototype.load = function(context) {
    this.context = context;
    this.clippedBuffer.reset(context);
    if (this.clippedBuffer.text.length && this.clippedBuffer.text !== "[object Object]") {
      return context.buffer.push(" " + this.attrName + "=\"" + this.clippedBuffer.text + "\"");
    }
  };

  /*
  */


  TextBinding.prototype._onChange = function(value) {
    return $(this.node.section.elements).attr(this.attrName, escapeHTML(value));
  };

  return TextBinding;

})(require("./base"));

module.exports = TextBinding;
