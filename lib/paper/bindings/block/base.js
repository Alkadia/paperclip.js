// Generated by CoffeeScript 1.6.2
var BlockBinding,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BlockBinding = (function(_super) {
  __extends(BlockBinding, _super);

  /*
  */


  function BlockBinding(section, clip, nodeFactory, scriptName) {
    this.section = section;
    this.clip = clip;
    this.nodeFactory = nodeFactory;
    this.scriptName = scriptName;
    this._onChange = __bind(this._onChange, this);
    this.script = this.clip.script(this.scriptName);
    this.clip = this.clip;
  }

  /*
  */


  BlockBinding.prototype.load = function(context) {};

  /*
  */


  BlockBinding.prototype.bind = function() {
    return this._binding = this.clip.bind(this.scriptName).to(this._onChange).now();
  };

  /*
  */


  BlockBinding.prototype.unbind = function() {
    var _ref;

    if ((_ref = this._binding) != null) {
      _ref.dispose();
    }
    return this._binding = void 0;
  };

  /*
  */


  BlockBinding.prototype._onChange = function(value) {};

  /*
  */


  BlockBinding.test = function(node) {
    return false;
  };

  return BlockBinding;

})(require("../base"));

module.exports = BlockBinding;
