// Generated by CoffeeScript 1.6.2
/*

{{#when:condition}}
  do something
{{/}}
*/


(function() {
  var BlockDecor, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BlockDecor = (function(_super) {
    __extends(BlockDecor, _super);

    function BlockDecor() {
      _ref = BlockDecor.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    BlockDecor.prototype._onChange = function(value, oldValue) {
      var childTemplate, oldChild, _ref1;

      oldChild = this.child;
      if ((_ref1 = this.child) != null) {
        _ref1.unbind();
      }
      this.child = void 0;
      if (value) {
        childTemplate = this.contentTemplate;
      } else {
        childTemplate = this.childBlockTemplate;
      }
      if (childTemplate) {
        this.child = childTemplate.bind(this.context);
        return this.section.replaceChildNodes(this.child.section.render());
      } else if (oldChild != null) {
        return oldChild.remove();
      }
    };

    /*
    */


    BlockDecor.prototype.unbind = function() {
      var _ref1;

      BlockDecor.__super__.unbind.call(this);
      return (_ref1 = this.child) != null ? _ref1.dispose() : void 0;
    };

    return BlockDecor;

  })(require("./base"));

  module.exports = BlockDecor;

}).call(this);
