// Generated by CoffeeScript 1.6.2
var ForDecor, subindable, type, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

type = require("type-component");

subindable = require("subindable");

ForDecor = (function(_super) {
  __extends(ForDecor, _super);

  function ForDecor() {
    _ref = ForDecor.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  ForDecor.prototype._onChange = function(value, oldValue) {
    var child, childNodes, key, subContext, _results;

    childNodes = [];
    this.section.removeAll();
    _results = [];
    for (key in value) {
      subContext = new subindable.Object(void 0, this.context);
      subContext.key = key;
      subContext.value = value[key];
      child = this.contentTemplate.bind(subContext);
      _results.push(this.section.append(child.section.toFragment()));
    }
    return _results;
  };

  return ForDecor;

})(require("./base"));

module.exports = ForDecor;
