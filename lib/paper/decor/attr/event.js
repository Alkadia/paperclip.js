// Generated by CoffeeScript 1.6.2
var EventDecor, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventDecor = (function(_super) {
  __extends(EventDecor, _super);

  function EventDecor() {
    this._onEvent = __bind(this._onEvent, this);    _ref = EventDecor.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  EventDecor.prototype.watch = false;

  /*
  */


  EventDecor.prototype.propagateEvent = false;

  /*
  */


  EventDecor.prototype.preventDefault = true;

  /*
  */


  EventDecor.prototype.bind = function() {
    var ev, event, _i, _len, _ref1, _ref2;

    EventDecor.__super__.bind.call(this);
    if ((_ref1 = this.name) === "click" || _ref1 === "mouseup" || _ref1 === "mousedown") {
      this.preventDefault = true;
    }
    _ref2 = ["propagateEvent", "preventDefault"];
    for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
      ev = _ref2[_i];
      if ((this.clip.get(ev) == null) && (this[ev] != null)) {
        this.clip.set(ev, this[ev]);
      }
    }
    event = this.event || this.name;
    if (event.substr(0, 2) === "on") {
      event = event.substr(2).toLowerCase();
    }
    return $(this.element).bind(event, this._onEvent);
  };

  /*
  */


  EventDecor.prototype._onEvent = function(event) {
    if (this.clip.get("propagateEvent") === false) {
      event.stopPropagation();
    }
    if (this.clip.get("preventDefault") === true) {
      event.preventDefault();
    }
    if (this.clip.get("disable")) {
      return;
    }
    this.clip.data.set("event", event);
    return this._update(event);
  };

  /*
  */


  EventDecor.prototype._update = function(event) {
    return this.script.update();
  };

  return EventDecor;

})(require("./dataBind"));

module.exports = EventDecor;
