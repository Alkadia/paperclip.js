// Generated by CoffeeScript 1.6.2
var ValueDecor, escapeHTML, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

escapeHTML = require("../../utils/escapeHTML");

ValueDecor = (function(_super) {
  __extends(ValueDecor, _super);

  function ValueDecor() {
    _ref = ValueDecor.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  ValueDecor.prototype.load = function(stream) {
    var v;

    this.stream = stream;
    v = this.clip.get("value");
    if (v != null) {
      return this._onChange(v);
    }
  };

  /*
  */


  ValueDecor.prototype._onChange = function(value) {
    var _ref1;

    if (value == null) {
      value = "";
    }
<<<<<<< HEAD
    return this.node.target.replace(this.stream.createTextNode(escapeHTML(value)));
=======
    return (_ref1 = this.node.section) != null ? _ref1.html(escapeHTML(value)) : void 0;
>>>>>>> master
  };

  return ValueDecor;

})(require("./base"));

module.exports = ValueDecor;
