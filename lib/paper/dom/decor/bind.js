// Generated by CoffeeScript 1.6.2
(function() {
  var Clip, Decorator, Template, handlers;

  Template = require("../../template");

  Clip = require("../../../clip");

  handlers = require("./handlers");

  Decorator = (function() {
    function Decorator(data, element) {
      var action, clazz, handler, _i, _len, _ref;

      this.data = data;
      this.element = element;
      this._clip = new Clip({
        script: Clip.compile(this._dataBind(element)),
        data: this.data
      });
      this._handlers = [];
      _ref = this._clip.watchers.names;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        action = _ref[_i];
        if (handlers[action]) {
          clazz = handlers[action];
          this._handlers.push(handler = new clazz(this._clip.watcher(action), this._clip, element));
          this.traverse = handler.traverse !== false;
        }
      }
    }

    Decorator.prototype.init = function() {
      var handler, _i, _len, _ref, _results;

      _ref = this._handlers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        handler = _ref[_i];
        handler.dom = this.dom;
        _results.push(typeof handler.init === "function" ? handler.init() : void 0);
      }
      return _results;
    };

    Decorator.prototype._dataBind = function(element) {
      var attr, _i, _len, _ref;

      _ref = element.attributes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        attr = _ref[_i];
        if (attr.name === "data-bind") {
          return attr.value;
        }
      }
    };

    Decorator.test = function(element) {
      var attr, _i, _len, _ref;

      _ref = element.attributes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        attr = _ref[_i];
        if (attr.name === "data-bind") {
          return true;
        }
      }
      return false;
    };

    return Decorator;

  })();

  module.exports = Decorator;

}).call(this);
