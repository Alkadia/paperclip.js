// Generated by CoffeeScript 1.6.2
var AttributeBinding, Decorator, Template,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Template = require("../../template");

AttributeBinding = (function() {
  /*
  */
  function AttributeBinding(data, attribute, element) {
    this.data = data;
    this.attribute = attribute;
    this.element = element;
    this._change = __bind(this._change, this);
    this.name = attribute.name;
    this._template = new Template(this.attribute.value);
    this._renderer = this._template.render(this.data);
  }

  /*
  */


  AttributeBinding.prototype.init = function() {
    return this._renderer.bind("text").to(this._change);
  };

  /*
  */


  AttributeBinding.prototype._change = function(value) {
    if (this.name === "value") {
      return this.element.value = value;
    } else {
      return $(this.element).attr(this.name, this.currentValue = value);
    }
  };

  return AttributeBinding;

})();

Decorator = (function() {
  /*
  */
  function Decorator(data, element) {
    this.data = data;
    this.element = element;
    this._bindings = [];
  }

  /*
  */


  Decorator.prototype.init = function() {
    var attr, binding, _i, _len, _ref, _results;

    _ref = this.element.attributes;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      attr = _ref[_i];
      if (!!~String(attr.value).indexOf("{{")) {
        this._bindings.push(binding = new AttributeBinding(this.data, attr, this.element));
        _results.push(binding.init());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  /*
  */


  Decorator.test = function(element) {
    var attr, _i, _len, _ref;

    _ref = element.attributes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      attr = _ref[_i];
      if (!!~String(attr.value).indexOf("{{")) {
        return true;
      }
    }
    return false;
  };

  return Decorator;

})();

module.exports = Decorator;
