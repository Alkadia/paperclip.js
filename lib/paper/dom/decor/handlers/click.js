// Generated by CoffeeScript 1.6.2
(function() {
  var Handler, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Handler = (function(_super) {
    __extends(Handler, _super);

    function Handler() {
      this._onClicked = __bind(this._onClicked, this);      _ref = Handler.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Handler.prototype.init = function() {
      return $(this.element).bind("click", this._onClicked);
    };

    Handler.prototype._onClicked = function(event) {
      return this.watcher.update();
    };

    return Handler;

  })(require("./base"));

  module.exports = Handler;

}).call(this);
