// Generated by CoffeeScript 1.6.2
var Clip, bindable, bindings, mappers, nofactor, template;

Clip = require("../clip");

template = require("./template");

nofactor = require("nofactor");

mappers = require("./mappers");

bindings = require("./bindings");

bindable = require("bindable");

module.exports = {
  /*
  */

  Clip: Clip,
  /*
  */

  bindable: bindable,
  /*
   parses a template
  */

  template: template,
  /*
   registers a binding modifier 
   {{ message | titlecase() }}
  */

  map: function(name, mapper) {
    return mappers[name] = mapper;
  },
  /*
   expose the class so that one can be registered
  */

  BaseBlockBinding: bindings.BaseBlockBinding,
  /*
  */

  BaseNodeBinding: bindings.BaseNodeBinding,
  /*
  */

  BaseAttrDataBinding: bindings.BaseAttrDataBinding,
  /*
   adds a block binding class
   {{#custom}}
   {{/}}
  */

  blockBinding: function(name, blockBindingClass) {
    return bindings.blockBindingFactory.register(blockBindingClass);
  },
  /*
   adds a node binding shim
   <custom />
   <div custom="" />
  */

  nodeBinding: function(name, nodeBindingClass) {
    return bindings.nodeBindingFactory.register(nodeBindingClass);
  },
  /*
    data-bind="{{ custom: binding }}"
  */

  attrDataBinding: function(name, attrDataBindingClass) {
    return bindings.nodeBindingFactory.dataBind.register(name, attrDataBindingClass);
  }
};
