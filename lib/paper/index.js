// Generated by CoffeeScript 1.6.2
var Context, Html, Paper, asyngleton, modifiers, nodeFactories, pilot;

Context = require("./context");

Html = require("./writers/html");

pilot = require("pilot-block");

asyngleton = require("asyngleton");

modifiers = require("./defaultModifiers");

nodeFactories = require("./nodeFactories");

Paper = (function() {
  /*
  */
  function Paper(templateFactory, nodeFactory) {
    this.templateFactory = templateFactory;
    this.nodeFactory = nodeFactory;
    if (!this.nodeFactory) {
      if (typeof window === "undefined") {
        this.nodeFactory = nodeFactories.string();
      } else {
        this.nodeFactory = nodeFactories.dom();
      }
    }
    this.modifiers = modifiers;
  }

  /*
  */


  Paper.prototype.load = function(context) {
    this.context = context;
    return this.templateFactory(this).load(context);
  };

  /*
  */


  Paper.prototype.bind = function(context) {
    this.context = context;
    return this.load(context).bind();
  };

  /*
  */


  Paper.prototype.create = function() {
    return new Html(this);
  };

  return Paper;

})();

module.exports = function(templateFactory, nodeFactory) {
  return new Paper(templateFactory, nodeFactory);
};

module.exports.Context = Context;

module.exports.registerModifier = function(name, modifier) {
  return modifiers[name] = modifier;
};
