// Generated by CoffeeScript 1.6.2
var BindingCollection, BlockWriter, ElementWriter, FragmentWriter, Loader, TextWriter, modifiers;

modifiers = require("./defaultModifiers");

FragmentWriter = require("./writers/fragment");

BlockWriter = require("./writers/block");

TextWriter = require("./writers/text");

ElementWriter = require("./writers/element");

BindingCollection = require("./bindings/collection");

Loader = (function() {
  /*
  */
  function Loader(template) {
    this.template = template;
    this.nodeFactory = template.nodeFactory;
    this.paper = template.paper;
    this.bindings = new BindingCollection();
    this._writers = {
      fragment: new FragmentWriter(this),
      block: new BlockWriter(this),
      text: new TextWriter(this),
      element: new ElementWriter(this)
    };
  }

  /*
  */


  Loader.prototype.load = function(context) {
    this.context = context;
    this.node = this.paper(this._writers.fragment.write, this._writers.block.write, this._writers.element.write, this._writers.text.write, modifiers);
    this.bindings.load(this.context);
    return this;
  };

  /*
  */


  Loader.prototype.bind = function() {
    this.bindings.bind();
    return this;
  };

  /*
  */


  Loader.prototype.unbind = function() {
    this.bindings.unbind();
    return this;
  };

  /*
  */


  Loader.prototype.toString = function() {
    return this.node.toString();
  };

  return Loader;

})();

module.exports = Loader;
