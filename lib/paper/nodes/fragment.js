// Generated by CoffeeScript 1.6.2
var Fragment,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Fragment = (function(_super) {
  __extends(Fragment, _super);

  function Fragment(children) {
    var child, _i, _len;

    if (children == null) {
      children = [];
    }
    Fragment.__super__.constructor.call(this);
    for (_i = 0, _len = children.length; _i < _len; _i++) {
      child = children[_i];
      this.addChild(child);
    }
  }

  return Fragment;

})(require("./base"));

module.exports = Fragment;
