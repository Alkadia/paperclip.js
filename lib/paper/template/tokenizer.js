// Generated by CoffeeScript 1.6.2
var BaseTokenizer, Codes, Tokenizer,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseTokenizer = require("../../base/tokenizer");

Codes = (function() {
  function Codes() {}

  Codes.OTHER = -1;

  Codes.LM = 1;

  Codes.RM = Codes.LM + 1;

  Codes.CHAR = Codes.RM + 1;

  return Codes;

})();

Tokenizer = (function(_super) {
  __extends(Tokenizer, _super);

  /*
  */


  Tokenizer.Codes = Codes;

  /*
  */


  function Tokenizer() {
    Tokenizer.__super__.constructor.call(this);
    this._s.skipWhitespace(false);
  }

  /*
  */


  Tokenizer.prototype._next = function() {
    var ccode;

    if ((ccode = this._s.cchar()) === "{") {
      if (this._s.peek(1) === "{") {
        this._s.nextChar();
        return this._t(Codes.LM, "{{");
      }
    } else if ((ccode = this._s.cchar()) === "}") {
      if (this._s.peek(1) === "}") {
        this._s.nextChar();
        return this._t(Codes.RM, "}}");
      }
    }
    return this._t(Codes.CHAR, this._s.cchar());
  };

  return Tokenizer;

})(BaseTokenizer);

module.exports = Tokenizer;
