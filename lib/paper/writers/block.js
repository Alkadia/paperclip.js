// Generated by CoffeeScript 1.6.2
var BlockWriter, Clip, decorFactory, loaf, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

loaf = require("loaf");

decorFactory = require("../decor/blockFactory");

Clip = require("../../clip");

BlockWriter = (function(_super) {
  __extends(BlockWriter, _super);

  function BlockWriter() {
    this.write = __bind(this.write, this);    _ref = BlockWriter.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  BlockWriter.prototype.write = function(script, contentFactory, childBindings) {
    var clip, section;

    section = loaf();
    clip = new Clip({
      script: script,
      watch: false
    });
    this.bindings.push(decorFactory.getDecor(section, clip, this.nodeFactory));
    return section.toFragment();
  };

  return BlockWriter;

})(require("./base"));

module.exports = BlockWriter;
