// Generated by CoffeeScript 1.6.2
var Base, Block, Element, Html, Text,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Element = require("./element");

Block = require("./block");

Text = require("./text");

Base = require("./base");

Html = (function(_super) {
  __extends(Html, _super);

  /*
  */


  Html.prototype.name = "html";

  function Html(paper) {
    this.paper = paper;
    Html.__super__.constructor.call(this);
  }

  /* 
   just an html buffer
  */


  Html.prototype.text = function(content) {
    this.addChild(new Text(content));
    return this;
  };

  /*
   Node which has a binding
  */


  Html.prototype.element = function(name, options) {
    this.addChild(new Element(name, options));
    return this;
  };

  /*
   binding with children
  */


  Html.prototype.block = function(script, contentFactory, childBinding) {
    this.addChild(new Block(script, contentFactory, childBinding));
    return this;
  };

  /*
  */


  Html.prototype.clone = function() {
    var html;

    html = new Html();
    html.children = Base.cloneEach(this.children);
    return html;
  };

  return Html;

})(Base);

module.exports = Html;
