// Generated by CoffeeScript 1.6.2
var Bindable, pcid, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

pcid = 0;

Bindable = (function(_super) {
  __extends(Bindable, _super);

  function Bindable() {
    _ref = Bindable.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  Bindable.prototype._writeHead = function(info, callback) {
    return info.buffer.push("<!--sbnd:" + (++pcid) + "-->");
  };

  /*
  */


  Bindable.prototype._writeTail = function(info, callback) {
    return info.buffer.push("<!--ebnd:" + (++pcid) + "-->");
  };

  return Bindable;

})(require("./base"));

module.exports = Bindable;
