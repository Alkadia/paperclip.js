// Generated by CoffeeScript 1.6.2
var Clip, TextBinding,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Clip = require("../../clip");

TextBinding = (function(_super) {
  __extends(TextBinding, _super);

  /*
  */


  TextBinding.prototype.type = "text";

  /*
  */


  function TextBinding(script) {
    this.script = script;
    TextBinding.__super__.constructor.call(this);
    this.clip = new Clip({
      script: script,
      watch: false
    });
  }

  /*
  */


  TextBinding.prototype._writeHead = function(info, callback) {
    var v;

    this._bindingStart(info);
    this.clip.reset(info.data);
    this.clip.update();
    v = this.clip.get("value");
    if (v) {
      info.buffer.push(v);
    }
    return callback();
  };

  /*
  */


  TextBinding.prototype._writeTail = function(info, callback) {
    this._bindingEnd(info);
    return callback();
  };

  /*
  */


  TextBinding.prototype.clone = function() {
    return new TextBinding(this.script);
  };

  return TextBinding;

})(require("./bindable"));

module.exports = TextBinding;
