// Generated by CoffeeScript 1.6.2
/*

{{#when:condition}}
  do something
{{/}}
*/

var BlockDecor, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BlockDecor = (function(_super) {
  __extends(BlockDecor, _super);

  function BlockDecor() {
    this._onChange = __bind(this._onChange, this);    _ref = BlockDecor.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  BlockDecor.scriptName = "when";

  /*
  */


  BlockDecor.prototype.load = function(context, callback) {
    this.context = context;
    if (this.clip.get("when")) {
      this.child = this.node.createContent();
      return this.child.load(context, callback);
    } else {
      return callback();
    }
  };

  /*
  */


  BlockDecor.prototype._onChange = function(value) {
    if (value) {
      return this.node.createContent().attach(this.node, this.context);
    } else {
      return this.node.section.html("");
    }
  };

  return BlockDecor;

})(require("./base"));

module.exports = BlockDecor;
