// Generated by CoffeeScript 1.6.2
var Context, Html, Paper, asyngleton, pilot;

Context = require("./context");

Html = require("./nodes/html");

pilot = require("pilot-block");

asyngleton = require("asyngleton");

Paper = (function() {
  /*
  */
  function Paper(factory) {
    this.factory = factory;
    this.node = this.factory.call(this);
  }

  /*
  */


  Paper.prototype.load = asyngleton(function(context, callback) {
    return this.node.load(context, callback);
  });

  /*
  */


  Paper.prototype.attach = function(element, context, callback) {
    var _this = this;

    if (callback == null) {
      callback = (function() {});
    }
    return this.load(context, function(err, context) {
      var binding, _i, _len, _ref;

      if (err != null) {
        return callback(err);
      }
      element.innerHTML = context.buffer.join("");
      pilot.update(element);
      _ref = context.bindings;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        binding = _ref[_i];
        binding.bind(pilot.section(binding.id));
      }
      return callback(null, context);
    });
  };

  /*
  */


  Paper.prototype.create = function() {
    return new Html();
  };

  return Paper;

})();

module.exports = function(fn) {
  return new Paper(fn);
};

module.exports.Context = Context;
