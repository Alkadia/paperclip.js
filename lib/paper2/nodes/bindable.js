// Generated by CoffeeScript 1.6.2
var BindableNode, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BindableNode = (function(_super) {
  __extends(BindableNode, _super);

  function BindableNode() {
    _ref = BindableNode.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  BindableNode.prototype.bind = function(section) {
    this.section = section;
  };

  /*
  */


  BindableNode.prototype._writeHead = function(context, callback) {
    this._writeStartBlock(context);
    return BindableNode.__super__._writeHead.call(this, context, callback);
  };

  /*
  */


  BindableNode.prototype._writeStartBlock = function(context) {
    var pcid;

    context.internal.set("pcid", pcid = (context.internal.get("pcid") || 0) + 1);
    context.buffer.push("<!--spc:" + (this.id = pcid) + "-->");
    return context.addBinding(this);
  };

  /*
  */


  BindableNode.prototype._writeTail = function(context, callback) {
    this._writeEndBlock(context);
    return BindableNode.__super__._writeTail.call(this, context, callback);
  };

  /*
  */


  BindableNode.prototype._writeEndBlock = function(context) {
    return context.buffer.push("<!--epc:" + this.id + "-->");
  };

  return BindableNode;

})(require("./base"));

module.exports = BindableNode;
