// Generated by CoffeeScript 1.6.2
var Binding,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Binding = (function(_super) {
  __extends(Binding, _super);

  Binding.prototype._type = "binding";

  /*
  */


  function Binding(script, children) {
    this.script = script;
    this.children = children;
    Binding.__super__.constructor.call(this);
    this.addChild(this.children);
  }

  /*
  */


  Binding.prototype.toJsString = function() {
    return "this." + (this.toMethodString());
  };

  /*
  */


  Binding.prototype.toString = function() {
    return "')." + (this.toMethodString()) + ".html('";
  };

  /*
  */


  Binding.prototype.toMethodString = function() {
    return "blockBinding(" + this.script + ", function(){ return paper.create().html('" + (this.children.toString()) + "')})";
  };

  return Binding;

})(require("./base"));

module.exports = Binding;
