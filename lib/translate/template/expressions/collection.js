// Generated by CoffeeScript 1.6.2
var CollectionExpression, Expression, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CollectionExpression = require("../../base/collectionExpression");

Expression = (function(_super) {
  __extends(Expression, _super);

  function Expression() {
    _ref = Expression.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Expression.prototype.toString = function() {
    var command, item, _i, _len, _ref1;

    command = ["this"];
    _ref1 = this.items;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      item = _ref1[_i];
      command.push(item.toString());
    }
    return command.join(".");
  };

  return Expression;

})(CollectionExpression);

module.exports = Expression;
