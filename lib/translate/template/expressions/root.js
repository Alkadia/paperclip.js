// Generated by CoffeeScript 1.6.2
var RootExpression,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RootExpression = (function(_super) {
  __extends(RootExpression, _super);

  RootExpression.prototype._method = "html";

  function RootExpression(children, modExports) {
    this.children = children;
    this.modExports = modExports != null ? modExports : true;
    RootExpression.__super__.constructor.call(this);
    this.addChild(children);
  }

  RootExpression.prototype.toString = function() {
    var buffer, element, _ref;

    buffer = [];
    if (this.modExports) {
      buffer.push("module.exports = ");
    }
    element = "" + this.children;
    if (((_ref = this.children.items) != null ? _ref.length : void 0) > 1) {
      element = "fragment([" + element + "])";
    }
    buffer.push("function(fragment, block, element, text, modifiers){ return " + element + " }");
    return buffer.join(" ");
  };

  return RootExpression;

})(require("./base"));

module.exports = RootExpression;
