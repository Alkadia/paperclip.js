// Generated by CoffeeScript 1.6.2
var AttributeExpression,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

AttributeExpression = (function(_super) {
  __extends(AttributeExpression, _super);

  AttributeExpression.prototype._type = "attribute";

  /*
  */


  function AttributeExpression(name, value) {
    this.name = name;
    this.value = value;
    AttributeExpression.__super__.constructor.call(this);
    if (this.value) {
      this.addChild(this.value);
    }
  }

  /*
  */


  AttributeExpression.prototype.toString = function() {
    return "attr('" + this.name + "', " + this.value + ")";
  };

  return AttributeExpression;

})(require("./base"));

module.exports = AttributeExpression;
