0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.5.0
3 info using node@v0.10.36
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/craig/Developer/Public/paperclip.js',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/craig/.npm/paperclip/1.2.8/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/craig/.npm/paperclip/1.2.8/package.tgz',
9 verbose tar pack   '/Users/craig/Developer/Public/paperclip.js' ]
10 verbose tarball /Users/craig/.npm/paperclip/1.2.8/package.tgz
11 verbose folder /Users/craig/Developer/Public/paperclip.js
12 info prepublish paperclip@1.2.8
13 verbose addLocalTarball adding from inside cache /Users/craig/.npm/paperclip/1.2.8/package.tgz
14 silly cache afterAdd paperclip@1.2.8
15 verbose afterAdd /Users/craig/.npm/paperclip/1.2.8/package/package.json not in flight; writing
16 verbose afterAdd /Users/craig/.npm/paperclip/1.2.8/package/package.json written
17 silly publish { name: 'paperclip',
17 silly publish   version: '1.2.8',
17 silly publish   description: 'controller logic:',
17 silly publish   main: './lib/node.js',
17 silly publish   scripts: { test: 'make jshint test-coveralls' },
17 silly publish   keywords: [ 'template', 'templates', 'ui', 'browser', 'dom', 'reactive' ],
17 silly publish   browser: './lib/browser.js',
17 silly publish   transform: './lib/transform.js',
17 silly publish   repository: { type: 'git', url: 'https://github.com/mojo-js/paperclip.js' },
17 silly publish   author: '',
17 silly publish   license: 'MIT',
17 silly publish   gitHead: '1336ca5b7f1f0c344a291ace63ddf211d5a94acd',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   devDependencies:
17 silly publish    { benchmark: '~1.0.0',
17 silly publish      coveralls: '^2.11.2',
17 silly publish      'expect.js': '0.2.x',
17 silly publish      express: '~3.3.4',
17 silly publish      istanbul: '^0.3.5',
17 silly publish      jquery: '~1.8.3',
17 silly publish      jscs: '^1.10.0',
17 silly publish      jsdom: '0.10.5',
17 silly publish      jshint: '^2.6.0',
17 silly publish      karma: '^0.12.31',
17 silly publish      'karma-browserify': '^3.0.1',
17 silly publish      'karma-browserstack-launcher': '^0.1.2',
17 silly publish      'karma-chrome-launcher': '^0.1.7',
17 silly publish      'karma-firefox-launcher': '^0.1.4',
17 silly publish      'karma-mocha': '^0.1.10',
17 silly publish      'karma-safari-launcher': '^0.1.1',
17 silly publish      'karma-sauce-launcher': '^0.2.10',
17 silly publish      mocha: '~1.15.1',
17 silly publish      'mojo-cli': '^0.1.1',
17 silly publish      pegjs: '^0.8.0',
17 silly publish      react: '^0.11.2',
17 silly publish      sinon: '^1.12.2',
17 silly publish      statsjs: '^1.0.6',
17 silly publish      'uglify-js': '1.3.x',
17 silly publish      uglifyjs: '^2.3.6',
17 silly publish      vue: '^0.11.4',
17 silly publish      watchjs: '0.0.0',
17 silly publish      xtend: '^4.0.0' },
17 silly publish   bin: { paperclip: './bin/paperclip' },
17 silly publish   dependencies:
17 silly publish    { 'bindable-object': '0.0.x',
17 silly publish      browserify: '^8.1.3',
17 silly publish      'document-section': '^0.2.6',
17 silly publish      he: '~0.4.1',
17 silly publish      nofactor: '^1.0.0',
17 silly publish      optimist: '0.4.x',
17 silly publish      protoclass: '0.0.x' },
17 silly publish   readme: '[![Build Status](https://travis-ci.org/mojo-js/paperclip.js.svg?branch=master)](https://travis-ci.org/mojo-js/paperclip.js) [![Coverage Status](https://coveralls.io/repos/mojo-js/paperclip.js/badge.svg)](https://coveralls.io/r/mojo-js/paperclip.js)\n\nPaperclip is a template engine designed for the DOM. It works by compiling templates to document fragments, then clones them whenever they\'re needed.\n\n<!--\n// test.pc\n"use strict";\nmodule.exports = (function(fragment, block, element, text, comment, parser, modifiers) {\n    return fragment([text("hello "), block({\n        \'value\': {\n            run: function() {\n                return this.context.get([\'name\']);\n            },\n            refs: [\n                ["name"]\n           ]\n        }\n    }, void 0), text("! ")]);\n})\n-->\n\n### Features\n\n- mustache-like syntax\n- animations\n- extensible\n- super fast\n- inline javascript\n- compiled templates\n- explicit data-binding (one-way, two-way, unbound operators)\n- works with older browsers (IE 8+ tested)\n- accepts vanilla javascript objects\n- works with NodeJS\n- unit testable in node, and in the browser\n- [works well with coverage tools such as istanbul](https://cloud.githubusercontent.com/assets/757408/4878446/ab0896ba-630c-11e4-9d14-fa1fc0179b1e.png)\n- 17kb minified & gzipped\n- no browser dependencies\n\n### Adapters\n\n- [MarionetteJS](https://github.com/mojo-js/marionette-paperclip)\n- [AngularJS](https://github.com/mojo-js/ng-paperclip)\n\n### Examples\n\n- [updating 1000 items](http://requirebin.com/?gist=425cdb646205bb819477)\n- [inline html](http://requirebin.com/?gist=bbb9b0eaccd3d7e41df1)\n- [partial todomvc example](http://paperclip-todomvc-example.herokuapp.com/)\n- [POJO dots](http://jsfiddle.net/JTxdM/108/)\n\n\n### Installation\n\nNPM: \n\n```\nnpm install paperclip\n```\n\nBower: \n\n```\nbower install paperclip\n```\n\n## Command line usage\n\nPaperclip templates can also be compiled straight to javascript. Simply run:\n\n```\n./node_modules/.bin/paperclip -i ./template.pc > ./template.pc.js\n```\n\nto compile templates into JavaScript.\n\n#### template template(source, options)\n\nCreates a new template.\n\n- `options` - options for the template\n  - `components` - component classes\n  - `attributes` - attribute helpers\n  - `modifiers`  - property modifiers\n  - `accessor`   - property accessor for the view context\n\n```javascript\nvar pc = require("paperclip");\nvar template = pc.template("hello {{name}}!");\n```\n\n#### view template.view([context])\n\nCreates a new view which controls a cloned document fragment provided by the template. \n\n- `context` - Can be anything. A backbone model, ember model, vanilla object. Be\nsure to specify the `template accessor` if this is other than plain-old object.\n\n#### view.render()\n\nReturns the cloned document fragment which can be added to the DOM.\n\n```javascript\nvar pc = require("paperclip");\nvar template = pc.template("hello {{name}}!");\nvar view = template.view({ name: "Bill Murray" });\ndocument.body.appendChild(view.render()); // will show "hello Bill Murray"\n```\n\n#### view.set(key, value)\n\nSets a property on the context of the view & updates the DOM.\n\n#### view.setProperties(properties)\n\nSets multiple properties on the view & updates the DOM.\n\n#### view.context\n\nThe context that the view is currently bound to. This can be anything.\n\n```javascript\nvar tpl = paperclip.template("hello {{name}}!");\nvar view = tpl.view({ name: "Will Smith" });\ndocument.body.appendChild(view.render());  // will show "hello Will Smith"\n\n// triggered whenever name has changed\nview.context.bind("name", function (name) {\n  console.log("name has changed!");\n});\n\n// only updates the elements bound to name\nview.context.set("name", "Oprah Winfrey");  // will show "hello Oprah Winfrey"\n```\n\n#### view.remove()\n\nRemoves the views from the DOM.\n\n#### String paperclip.parse(source)\n\nTranslates a template into JavaScript.\n\n## Block Syntax\n\n#### {{ blocks }}\n\nVariable blocks as placeholders for information that might change. For example:\n\n<!--\n{\n  name: {\n    first: "Tom",\n    last: "Hanks"\n  }\n}\n-->\n\n```html\nhello {{ name.first }} {{ name.last }}!\n```\n\nYou can also specify blocks within attributes.\n\n<!--\n{\n  color: "blue"\n}\n-->\n\n```html\nmy favorite color is <span style="color: {{color}}">{{color}}</span>\n```\n\nPaperclip also supports **inline javascript**. For example:\n\n<!--\n{\n  message: undefined\n}\n-->\n\n```html\nhello {{ message || "World" }}! <br />\ninline-json {{ {\'5+10 is\':5+10, \'message is defined?\' : message ? \'yes\' : \'no\' } | json }}\n```\n\n## Modifiers\n\nModifiers format data in a variable block. A good example of this might be presenting data to the user depending on their locale, or parsing data into markdown. Here\'s an example of how you can use modifiers:\n\n<!--\nfunction () {\n\n  paperclip.modifier("divide", function (age, number) {\n    return age/number;\n  });\n\n  paperclip.modifier("round", function (number) {\n    return Math.round(number);\n  });\n\n  return {\n    age: 30\n  };\n}\n-->\n\n```html\nA human that is {{age}} years old is like a {{ age | divide(5.6) | round }} year old dog!\n```\n\n## Binding Operators\n\nPaperclip comes with various binding operators that give you full control over how references are handled. You can easily\nspecify whether to bind one way, two ways, or not at all. Here\'s the basic syntax:\n\n<!--\n{\n  name: "Emma Stone"\n}\n-->\n\n```html\nTwo-way binding:\n<input class="form-control" value="{{ <~>name }}" />\n\nBind input value to name only:\n<input class="form-control" value="{{ ~>name }}" />\n\nBind name to input value only:\n\n<input class="form-control" value="{{ <~name }}" />\n\nUnbound helper - don\'t watch for any changes:\n{{ ~name }}\n```\n\n## Built-in components\n\n#### &lt;unsafe html={{html}} /&gt;\n\nAllows unsafe HTML to be embedded in the template.\n\n<!--\n{\n  content: "hello <strong>world</strong>!"\n}\n-->\n\n```html\nUnsafe: <unsafe html={{content}} />\n```\n\n\n#### &lt;show when={{condition}} /&gt;\n\nConditional block helper\n\n<!--\n{\n  age: 24\n}\n-->\n\n```html\n<input type="text" class="form-control" placeholder="What\'s your age?" value="{{ <~>age }}"></input>\n\n<show when={{age >= 18}}>\n  You\'re legally able to vote in the U.S.\n</show>\n\n<show when={{age > 16}}>\n  You\'re almost old enough to vote in the U.S.\n</show>\n\n<show when={{age < 16}}>\n  You\'re too young to vote in the U.S.\n</show>\n```\n\n#### &lt;switch /&gt;\n\nSwitch conditional helper\n\n<!--\n{\n  age: 24\n}\n-->\n\n```html\n<input type="text" class="form-control" placeholder="What\'s your age?" value="{{ <~>age }}"></input>\n\n<switch>\n  <show when={{age >= 18}}>\n    You\'re legally able to vote in the U.S.\n  </show>\n  <show when={{age > 16}}>\n    You\'re almost old enough to vote in the U.S.\n  </show>\n  <show>\n    You\'re too young to vote in the U.S.\n  </show>\n</switch>\n```\n\n#### &lt;repeat each={{items}} as=\'item\' /&gt;\n\nCreates a list of items. \n\n- `as` - property to define for each iterated item. If this is omitted, the context of the embedded\ntemplate will be the iterated item itself.\n\n<!--\n{\n  items: _.shuffle(_.range(4))\n}\n-->\n\n```html\n<repeat each={{items}} as=\'item\'>\n  item {{item}} <br />\n</repeat>\n\n<!-- also valid -->\n\n<ul repeat.each={{item}} repeat.as=\'item\'>\n  <li>{{item}}</li>\n</ul>\n```\n\n#### &lt;stack state={{state}} /&gt;\n\nSimilar to switch view, matches the visible child element with the given state.\n\n```html\n\n<!-- show the home state -->\n<stack state=\'home\'>\n  <div name=\'home\'>\n  </div>\n  <div name=\'contact\'>\n  </div>\n</stack>\n```\n\n## Attribute helpers\n\nBelow are a list of data binding attributes you can use with elements.\n\n#### value={{ context }}\n\nInput data binding\n\n<!--\n{\n  message: "What\'s up?"\n}\n-->\n\n```html\n<input type="text" class="form-control" placeholder="Type in a message" value="{{ <~>message }}"></input>\n<h3>{{message}}</h3>\n```\n\nNotice the `<~>` operator. This tells paperclip to bind both ways. See [binding operators](#binding-operators) for more info.\n\n#### onEvent={{ expression }}\n\nExecuted when an event is fired on the DOM element. Here are all the available events:\n\n- `onChange` - called when an element changes\n- `onClick` - called when an element is clicked\n- `onLoad` - called when an element loads - useful for `<img />`\n- `onSubmit` - called on submit - useful for `<form />`\n- `onMouseDown` - called on mouse down\n- `onMouseUp` - called on mouse up\n- `onMouseOver` - called on mouse over\n- `onMouseOut` - called on mouse out\n- `onKeyDown` - called on key down\n- `onKeyUp` - called on key up\n- `onEnter` - called on enter key up\n- `onDelete` - called on delete key up\n\n<!--\n{\n  \n}\n-->\n\n```html\n<input type="text" class="form-control" placeholder="Type in a message" onEnter="{{ enterPressed = true }}"></input>\n\n{{#if: enterPressed }}\n  enter pressed\n{{/}}\n```\n\n#### enable={{ bool }}\n\nToggles the enabled state of an element.\n\n<!--\n{\n  formIsValid: false\n}\n-->\n\n```html\n<button class="btn btn-default" enable={{ formIsValid }}>Sign Up</button>\n```\n\n#### focus={{ bool }}\n\nFocuses cursor on an element.\n\n<!--\n{\n  focus: false\n}\n-->\n\n```html\n<input class="form-control" focus={{ focus }}></input>\n```\n\n\n\n',
17 silly publish   bugs: { url: 'https://github.com/mojo-js/paperclip.js/issues' },
17 silly publish   homepage: 'https://github.com/mojo-js/paperclip.js',
17 silly publish   _id: 'paperclip@1.2.8',
17 silly publish   _shasum: '22cbce9b6d00b027ae6c737f9ff018cad8c33eac',
17 silly publish   _from: '.' }
18 silly mapToRegistry name paperclip
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry http://registry.npmjs.org/
21 silly mapToRegistry uri http://registry.npmjs.org/paperclip
22 verbose publish registryBase http://registry.npmjs.org/
23 silly publish uploading /Users/craig/.npm/paperclip/1.2.8/package.tgz
24 verbose request uri http://registry.npmjs.org/paperclip
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 19:11:55
27 verbose request id 404c2ec580af1362
28 http request PUT http://registry.npmjs.org/paperclip
29 http 403 http://registry.npmjs.org/paperclip
30 verbose headers { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
30 verbose headers   'content-type': 'application/json',
30 verbose headers   'cache-control': 'max-age=60',
30 verbose headers   'content-length': '16162',
30 verbose headers   'accept-ranges': 'bytes',
30 verbose headers   date: 'Sat, 07 Feb 2015 03:11:57 GMT',
30 verbose headers   via: '1.1 varnish',
30 verbose headers   connection: 'keep-alive',
30 verbose headers   'x-served-by': 'cache-sjc3134-SJC',
30 verbose headers   'x-cache': 'MISS',
30 verbose headers   'x-cache-hits': '0',
30 verbose headers   'x-timer': 'S1423278715.782428,VS0,VE2124' }
31 verbose request invalidating /Users/craig/.npm/registry.npmjs.org/paperclip on PUT
32 error publish Failed PUT 403
33 verbose stack Error: forbidden cannot modify pre-existing version: 1.2.8
33 verbose stack old={"name":"paperclip","version":"1.2.8","description":"controller logic:","main":"./lib/node.js","scripts":{"test":"make jshint test-coveralls"},"keywords":["template","templates","ui","browser","dom","reactive"],"browser":"./lib/browser.js","transform":"./lib/transform.js","repository":{"type":"git","url":"https://github.com/mojo-js/paperclip.js"},"author":"","license":"MIT","gitHead":"1336ca5b7f1f0c344a291ace63ddf211d5a94acd","devDependencies":{"benchmark":"~1.0.0","coveralls":"^2.11.2","expect.js":"0.2.x","express":"~3.3.4","istanbul":"^0.3.5","jquery":"~1.8.3","jscs":"^1.10.0","jsdom":"0.10.5","jshint":"^2.6.0","karma":"^0.12.31","karma-browserify":"^3.0.1","karma-browserstack-launcher":"^0.1.2","karma-chrome-launcher":"^0.1.7","karma-firefox-launcher":"^0.1.4","karma-mocha":"^0.1.10","karma-safari-launcher":"^0.1.1","karma-sauce-launcher":"^0.2.10","mocha":"~1.15.1","mojo-cli":"^0.1.1","pegjs":"^0.8.0","react":"^0.11.2","sinon":"^1.12.2","statsjs":"^1.0.6","uglify-js":"1.3.x","uglifyjs":"^2.3.6","vue":"^0.11.4","watchjs":"0.0.0","xtend":"^4.0.0"},"bin":{"paperclip":"./bin/paperclip"},"dependencies":{"bindable-object":"0.0.x","browserify":"^8.1.3","document-section":"^0.2.6","he":"~0.4.1","nofactor":"^1.0.0","optimist":"0.4.x","protoclass":"0.0.x"},"bugs":{"url":"https://github.com/mojo-js/paperclip.js/issues"},"homepage":"https://github.com/mojo-js/paperclip.js","_id":"paperclip@1.2.8","_shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.10.36","_npmUser":{"name":"architectd","email":"craig.j.condon@gmail.com"},"maintainers":[{"name":"architectd","email":"craig.j.condon@gmail.com"}],"dist":{"shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","tarball":"http://registry.npmjs.org/paperclip/-/paperclip-1.2.8.tgz"}}
33 verbose stack new={"name":"paperclip","version":"1.2.8","description":"controller logic:","main":"./lib/node.js","scripts":{"test":"make jshint test-coveralls"},"keywords":["template","templates","ui","browser","dom","reactive"],"browser":"./lib/browser.js","transform":"./lib/transform.js","repository":{"type":"git","url":"https://github.com/mojo-js/paperclip.js"},"author":"","license":"MIT","gitHead":"1336ca5b7f1f0c344a291ace63ddf211d5a94acd","readmeFilename":"README.md","devDependencies":{"benchmark":"~1.0.0","coveralls":"^2.11.2","expect.js":"0.2.x","express":"~3.3.4","istanbul":"^0.3.5","jquery":"~1.8.3","jscs":"^1.10.0","jsdom":"0.10.5","jshint":"^2.6.0","karma":"^0.12.31","karma-browserify":"^3.0.1","karma-browserstack-launcher":"^0.1.2","karma-chrome-launcher":"^0.1.7","karma-firefox-launcher":"^0.1.4","karma-mocha":"^0.1.10","karma-safari-launcher":"^0.1.1","karma-sauce-launcher":"^0.2.10","mocha":"~1.15.1","mojo-cli":"^0.1.1","pegjs":"^0.8.0","react":"^0.11.2","sinon":"^1.12.2","statsjs":"^1.0.6","uglify-js":"1.3.x","uglifyjs":"^2.3.6","vue":"^0.11.4","watchjs":"0.0.0","xtend":"^4.0.0"},"bin":{"paperclip":"./bin/paperclip"},"dependencies":{"bindable-object":"0.0.x","browserify":"^8.1.3","document-section":"^0.2.6","he":"~0.4.1","nofactor":"^1.0.0","optimist":"0.4.x","protoclass":"0.0.x"},"readme":"[![Build Status](https://travis-ci.org/mojo-js/paperclip.js.svg?branch=master)](https://travis-ci.org/mojo-js/paperclip.js) [![Coverage Status](https://coveralls.io/repos/mojo-js/paperclip.js/badge.svg)](https://coveralls.io/r/mojo-js/paperclip.js)\u000a\u000aPaperclip is a template engine designed for the DOM. It works by compiling templates to document fragments, then clones them whenever they're needed.\u000a\u000a<!--\u000a// test.pc\u000a\"use strict\";\u000amodule.exports = (function(fragment, block, element, text, comment, parser, modifiers) {\u000a    return fragment([text(\"hello \"), block({\u000a        'value': {\u000a            run: function() {\u000a                return this.context.get(['name']);\u000a            },\u000a            refs: [\u000a                [\"name\"]\u000a           ]\u000a        }\u000a    }, void 0), text(\"! \")]);\u000a})\u000a-->\u000a\u000a### Features\u000a\u000a- mustache-like syntax\u000a- animations\u000a- extensible\u000a- super fast\u000a- inline javascript\u000a- compiled templates\u000a- explicit data-binding (one-way, two-way, unbound operators)\u000a- works with older browsers (IE 8+ tested)\u000a- accepts vanilla javascript objects\u000a- works with NodeJS\u000a- unit testable in node, and in the browser\u000a- [works well with coverage tools such as istanbul](https://cloud.githubusercontent.com/assets/757408/4878446/ab0896ba-630c-11e4-9d14-fa1fc0179b1e.png)\u000a- 17kb minified & gzipped\u000a- no browser dependencies\u000a\u000a### Adapters\u000a\u000a- [MarionetteJS](https://github.com/mojo-js/marionette-paperclip)\u000a- [AngularJS](https://github.com/mojo-js/ng-paperclip)\u000a\u000a### Examples\u000a\u000a- [updating 1000 items](http://requirebin.com/?gist=425cdb646205bb819477)\u000a- [inline html](http://requirebin.com/?gist=bbb9b0eaccd3d7e41df1)\u000a- [partial todomvc example](http://paperclip-todomvc-example.herokuapp.com/)\u000a- [POJO dots](http://jsfiddle.net/JTxdM/108/)\u000a\u000a\u000a### Installation\u000a\u000aNPM: \u000a\u000a```\u000anpm install paperclip\u000a```\u000a\u000aBower: \u000a\u000a```\u000abower install paperclip\u000a```\u000a\u000a## Command line usage\u000a\u000aPaperclip templates can also be compiled straight to javascript. Simply run:\u000a\u000a```\u000a./node_modules/.bin/paperclip -i ./template.pc > ./template.pc.js\u000a```\u000a\u000ato compile templates into JavaScript.\u000a\u000a#### template template(source, options)\u000a\u000aCreates a new template.\u000a\u000a- `options` - options for the template\u000a  - `components` - component classes\u000a  - `attributes` - attribute helpers\u000a  - `modifiers`  - property modifiers\u000a  - `accessor`   - property accessor for the view context\u000a\u000a```javascript\u000avar pc = require(\"paperclip\");\u000avar template = pc.template(\"hello {{name}}!\");\u000a```\u000a\u000a#### view template.view([context])\u000a\u000aCreates a new view which controls a cloned document fragment provided by the template. \u000a\u000a- `context` - Can be anything. A backbone model, ember model, vanilla object. Be\u000asure to specify the `template accessor` if this is other than plain-old object.\u000a\u000a#### view.render()\u000a\u000aReturns the cloned document fragment which can be added to the DOM.\u000a\u000a```javascript\u000avar pc = require(\"paperclip\");\u000avar template = pc.template(\"hello {{name}}!\");\u000avar view = template.view({ name: \"Bill Murray\" });\u000adocument.body.appendChild(view.render()); // will show \"hello Bill Murray\"\u000a```\u000a\u000a#### view.set(key, value)\u000a\u000aSets a property on the context of the view & updates the DOM.\u000a\u000a#### view.setProperties(properties)\u000a\u000aSets multiple properties on the view & updates the DOM.\u000a\u000a#### view.context\u000a\u000aThe context that the view is currently bound to. This can be anything.\u000a\u000a```javascript\u000avar tpl = paperclip.template(\"hello {{name}}!\");\u000avar view = tpl.view({ name: \"Will Smith\" });\u000adocument.body.appendChild(view.render());  // will show \"hello Will Smith\"\u000a\u000a// triggered whenever name has changed\u000aview.context.bind(\"name\", function (name) {\u000a  console.log(\"name has changed!\");\u000a});\u000a\u000a// only updates the elements bound to name\u000aview.context.set(\"name\", \"Oprah Winfrey\");  // will show \"hello Oprah Winfrey\"\u000a```\u000a\u000a#### view.remove()\u000a\u000aRemoves the views from the DOM.\u000a\u000a#### String paperclip.parse(source)\u000a\u000aTranslates a template into JavaScript.\u000a\u000a## Block Syntax\u000a\u000a#### {{ blocks }}\u000a\u000aVariable blocks as placeholders for information that might change. For example:\u000a\u000a<!--\u000a{\u000a  name: {\u000a    first: \"Tom\",\u000a    last: \"Hanks\"\u000a  }\u000a}\u000a-->\u000a\u000a```html\u000ahello {{ name.first }} {{ name.last }}!\u000a```\u000a\u000aYou can also specify blocks within attributes.\u000a\u000a<!--\u000a{\u000a  color: \"blue\"\u000a}\u000a-->\u000a\u000a```html\u000amy favorite color is <span style=\"color: {{color}}\">{{color}}</span>\u000a```\u000a\u000aPaperclip also supports **inline javascript**. For example:\u000a\u000a<!--\u000a{\u000a  message: undefined\u000a}\u000a-->\u000a\u000a```html\u000ahello {{ message || \"World\" }}! <br />\u000ainline-json {{ {'5+10 is':5+10, 'message is defined?' : message ? 'yes' : 'no' } | json }}\u000a```\u000a\u000a## Modifiers\u000a\u000aModifiers format data in a variable block. A good example of this might be presenting data to the user depending on their locale, or parsing data into markdown. Here's an example of how you can use modifiers:\u000a\u000a<!--\u000afunction () {\u000a\u000a  paperclip.modifier(\"divide\", function (age, number) {\u000a    return age/number;\u000a  });\u000a\u000a  paperclip.modifier(\"round\", function (number) {\u000a    return Math.round(number);\u000a  });\u000a\u000a  return {\u000a    age: 30\u000a  };\u000a}\u000a-->\u000a\u000a```html\u000aA human that is {{age}} years old is like a {{ age | divide(5.6) | round }} year old dog!\u000a```\u000a\u000a## Binding Operators\u000a\u000aPaperclip comes with various binding operators that give you full control over how references are handled. You can easily\u000aspecify whether to bind one way, two ways, or not at all. Here's the basic syntax:\u000a\u000a<!--\u000a{\u000a  name: \"Emma Stone\"\u000a}\u000a-->\u000a\u000a```html\u000aTwo-way binding:\u000a<input class=\"form-control\" value=\"{{ <~>name }}\" />\u000a\u000aBind input value to name only:\u000a<input class=\"form-control\" value=\"{{ ~>name }}\" />\u000a\u000aBind name to input value only:\u000a\u000a<input class=\"form-control\" value=\"{{ <~name }}\" />\u000a\u000aUnbound helper - don't watch for any changes:\u000a{{ ~name }}\u000a```\u000a\u000a## Built-in components\u000a\u000a#### &lt;unsafe html={{html}} /&gt;\u000a\u000aAllows unsafe HTML to be embedded in the template.\u000a\u000a<!--\u000a{\u000a  content: \"hello <strong>world</strong>!\"\u000a}\u000a-->\u000a\u000a```html\u000aUnsafe: <unsafe html={{content}} />\u000a```\u000a\u000a\u000a#### &lt;show when={{condition}} /&gt;\u000a\u000aConditional block helper\u000a\u000a<!--\u000a{\u000a  age: 24\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"What's your age?\" value=\"{{ <~>age }}\"></input>\u000a\u000a<show when={{age >= 18}}>\u000a  You're legally able to vote in the U.S.\u000a</show>\u000a\u000a<show when={{age > 16}}>\u000a  You're almost old enough to vote in the U.S.\u000a</show>\u000a\u000a<show when={{age < 16}}>\u000a  You're too young to vote in the U.S.\u000a</show>\u000a```\u000a\u000a#### &lt;switch /&gt;\u000a\u000aSwitch conditional helper\u000a\u000a<!--\u000a{\u000a  age: 24\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"What's your age?\" value=\"{{ <~>age }}\"></input>\u000a\u000a<switch>\u000a  <show when={{age >= 18}}>\u000a    You're legally able to vote in the U.S.\u000a  </show>\u000a  <show when={{age > 16}}>\u000a    You're almost old enough to vote in the U.S.\u000a  </show>\u000a  <show>\u000a    You're too young to vote in the U.S.\u000a  </show>\u000a</switch>\u000a```\u000a\u000a#### &lt;repeat each={{items}} as='item' /&gt;\u000a\u000aCreates a list of items. \u000a\u000a- `as` - property to define for each iterated item. If this is omitted, the context of the embedded\u000atemplate will be the iterated item itself.\u000a\u000a<!--\u000a{\u000a  items: _.shuffle(_.range(4))\u000a}\u000a-->\u000a\u000a```html\u000a<repeat each={{items}} as='item'>\u000a  item {{item}} <br />\u000a</repeat>\u000a\u000a<!-- also valid -->\u000a\u000a<ul repeat.each={{item}} repeat.as='item'>\u000a  <li>{{item}}</li>\u000a</ul>\u000a```\u000a\u000a#### &lt;stack state={{state}} /&gt;\u000a\u000aSimilar to switch view, matches the visible child element with the given state.\u000a\u000a```html\u000a\u000a<!-- show the home state -->\u000a<stack state='home'>\u000a  <div name='home'>\u000a  </div>\u000a  <div name='contact'>\u000a  </div>\u000a</stack>\u000a```\u000a\u000a## Attribute helpers\u000a\u000aBelow are a list of data binding attributes you can use with elements.\u000a\u000a#### value={{ context }}\u000a\u000aInput data binding\u000a\u000a<!--\u000a{\u000a  message: \"What's up?\"\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"Type in a message\" value=\"{{ <~>message }}\"></input>\u000a<h3>{{message}}</h3>\u000a```\u000a\u000aNotice the `<~>` operator. This tells paperclip to bind both ways. See [binding operators](#binding-operators) for more info.\u000a\u000a#### onEvent={{ expression }}\u000a\u000aExecuted when an event is fired on the DOM element. Here are all the available events:\u000a\u000a- `onChange` - called when an element changes\u000a- `onClick` - called when an element is clicked\u000a- `onLoad` - called when an element loads - useful for `<img />`\u000a- `onSubmit` - called on submit - useful for `<form />`\u000a- `onMouseDown` - called on mouse down\u000a- `onMouseUp` - called on mouse up\u000a- `onMouseOver` - called on mouse over\u000a- `onMouseOut` - called on mouse out\u000a- `onKeyDown` - called on key down\u000a- `onKeyUp` - called on key up\u000a- `onEnter` - called on enter key up\u000a- `onDelete` - called on delete key up\u000a\u000a<!--\u000a{\u000a  \u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"Type in a message\" onEnter=\"{{ enterPressed = true }}\"></input>\u000a\u000a{{#if: enterPressed }}\u000a  enter pressed\u000a{{/}}\u000a```\u000a\u000a#### enable={{ bool }}\u000a\u000aToggles the enabled state of an element.\u000a\u000a<!--\u000a{\u000a  formIsValid: false\u000a}\u000a-->\u000a\u000a```html\u000a<button class=\"btn btn-default\" enable={{ formIsValid }}>Sign Up</button>\u000a```\u000a\u000a#### focus={{ bool }}\u000a\u000aFocuses cursor on an element.\u000a\u000a<!--\u000a{\u000a  focus: false\u000a}\u000a-->\u000a\u000a```html\u000a<input class=\"form-control\" focus={{ focus }}></input>\u000a```\u000a\u000a\u000a\u000a","bugs":{"url":"https://github.com/mojo-js/paperclip.js/issues"},"homepage":"https://github.com/mojo-js/paperclip.js","_id":"paperclip@1.2.8","_shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.10.36","_npmUser":{"name":"architectd","email":"craig.j.condon@gmail.com"},"maintainers":[{"name":"architectd","email":"craig.j.condon@gmail.com"}],"dist":{"shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","tarball":"http://registry.npmjs.org/paperclip/-/paperclip-1.2.8.tgz"}}: paperclip
33 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:254:14)
33 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:178:14)
33 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:373:22)
33 verbose stack     at Request.emit (events.js:98:17)
33 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
33 verbose stack     at Request.emit (events.js:117:20)
33 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
33 verbose stack     at IncomingMessage.emit (events.js:117:20)
33 verbose stack     at _stream_readable.js:944:16
33 verbose stack     at process._tickCallback (node.js:442:13)
34 verbose statusCode 403
35 verbose pkgid paperclip
36 verbose cwd /Users/craig/Developer/Public/paperclip.js
37 error Darwin 14.1.0
38 error argv "node" "/usr/local/bin/npm" "publish"
39 error node v0.10.36
40 error npm  v2.5.0
41 error code E403
42 error forbidden cannot modify pre-existing version: 1.2.8
42 error old={"name":"paperclip","version":"1.2.8","description":"controller logic:","main":"./lib/node.js","scripts":{"test":"make jshint test-coveralls"},"keywords":["template","templates","ui","browser","dom","reactive"],"browser":"./lib/browser.js","transform":"./lib/transform.js","repository":{"type":"git","url":"https://github.com/mojo-js/paperclip.js"},"author":"","license":"MIT","gitHead":"1336ca5b7f1f0c344a291ace63ddf211d5a94acd","devDependencies":{"benchmark":"~1.0.0","coveralls":"^2.11.2","expect.js":"0.2.x","express":"~3.3.4","istanbul":"^0.3.5","jquery":"~1.8.3","jscs":"^1.10.0","jsdom":"0.10.5","jshint":"^2.6.0","karma":"^0.12.31","karma-browserify":"^3.0.1","karma-browserstack-launcher":"^0.1.2","karma-chrome-launcher":"^0.1.7","karma-firefox-launcher":"^0.1.4","karma-mocha":"^0.1.10","karma-safari-launcher":"^0.1.1","karma-sauce-launcher":"^0.2.10","mocha":"~1.15.1","mojo-cli":"^0.1.1","pegjs":"^0.8.0","react":"^0.11.2","sinon":"^1.12.2","statsjs":"^1.0.6","uglify-js":"1.3.x","uglifyjs":"^2.3.6","vue":"^0.11.4","watchjs":"0.0.0","xtend":"^4.0.0"},"bin":{"paperclip":"./bin/paperclip"},"dependencies":{"bindable-object":"0.0.x","browserify":"^8.1.3","document-section":"^0.2.6","he":"~0.4.1","nofactor":"^1.0.0","optimist":"0.4.x","protoclass":"0.0.x"},"bugs":{"url":"https://github.com/mojo-js/paperclip.js/issues"},"homepage":"https://github.com/mojo-js/paperclip.js","_id":"paperclip@1.2.8","_shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.10.36","_npmUser":{"name":"architectd","email":"craig.j.condon@gmail.com"},"maintainers":[{"name":"architectd","email":"craig.j.condon@gmail.com"}],"dist":{"shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","tarball":"http://registry.npmjs.org/paperclip/-/paperclip-1.2.8.tgz"}}
42 error new={"name":"paperclip","version":"1.2.8","description":"controller logic:","main":"./lib/node.js","scripts":{"test":"make jshint test-coveralls"},"keywords":["template","templates","ui","browser","dom","reactive"],"browser":"./lib/browser.js","transform":"./lib/transform.js","repository":{"type":"git","url":"https://github.com/mojo-js/paperclip.js"},"author":"","license":"MIT","gitHead":"1336ca5b7f1f0c344a291ace63ddf211d5a94acd","readmeFilename":"README.md","devDependencies":{"benchmark":"~1.0.0","coveralls":"^2.11.2","expect.js":"0.2.x","express":"~3.3.4","istanbul":"^0.3.5","jquery":"~1.8.3","jscs":"^1.10.0","jsdom":"0.10.5","jshint":"^2.6.0","karma":"^0.12.31","karma-browserify":"^3.0.1","karma-browserstack-launcher":"^0.1.2","karma-chrome-launcher":"^0.1.7","karma-firefox-launcher":"^0.1.4","karma-mocha":"^0.1.10","karma-safari-launcher":"^0.1.1","karma-sauce-launcher":"^0.2.10","mocha":"~1.15.1","mojo-cli":"^0.1.1","pegjs":"^0.8.0","react":"^0.11.2","sinon":"^1.12.2","statsjs":"^1.0.6","uglify-js":"1.3.x","uglifyjs":"^2.3.6","vue":"^0.11.4","watchjs":"0.0.0","xtend":"^4.0.0"},"bin":{"paperclip":"./bin/paperclip"},"dependencies":{"bindable-object":"0.0.x","browserify":"^8.1.3","document-section":"^0.2.6","he":"~0.4.1","nofactor":"^1.0.0","optimist":"0.4.x","protoclass":"0.0.x"},"readme":"[![Build Status](https://travis-ci.org/mojo-js/paperclip.js.svg?branch=master)](https://travis-ci.org/mojo-js/paperclip.js) [![Coverage Status](https://coveralls.io/repos/mojo-js/paperclip.js/badge.svg)](https://coveralls.io/r/mojo-js/paperclip.js)\u000a\u000aPaperclip is a template engine designed for the DOM. It works by compiling templates to document fragments, then clones them whenever they're needed.\u000a\u000a<!--\u000a// test.pc\u000a\"use strict\";\u000amodule.exports = (function(fragment, block, element, text, comment, parser, modifiers) {\u000a    return fragment([text(\"hello \"), block({\u000a        'value': {\u000a            run: function() {\u000a                return this.context.get(['name']);\u000a            },\u000a            refs: [\u000a                [\"name\"]\u000a           ]\u000a        }\u000a    }, void 0), text(\"! \")]);\u000a})\u000a-->\u000a\u000a### Features\u000a\u000a- mustache-like syntax\u000a- animations\u000a- extensible\u000a- super fast\u000a- inline javascript\u000a- compiled templates\u000a- explicit data-binding (one-way, two-way, unbound operators)\u000a- works with older browsers (IE 8+ tested)\u000a- accepts vanilla javascript objects\u000a- works with NodeJS\u000a- unit testable in node, and in the browser\u000a- [works well with coverage tools such as istanbul](https://cloud.githubusercontent.com/assets/757408/4878446/ab0896ba-630c-11e4-9d14-fa1fc0179b1e.png)\u000a- 17kb minified & gzipped\u000a- no browser dependencies\u000a\u000a### Adapters\u000a\u000a- [MarionetteJS](https://github.com/mojo-js/marionette-paperclip)\u000a- [AngularJS](https://github.com/mojo-js/ng-paperclip)\u000a\u000a### Examples\u000a\u000a- [updating 1000 items](http://requirebin.com/?gist=425cdb646205bb819477)\u000a- [inline html](http://requirebin.com/?gist=bbb9b0eaccd3d7e41df1)\u000a- [partial todomvc example](http://paperclip-todomvc-example.herokuapp.com/)\u000a- [POJO dots](http://jsfiddle.net/JTxdM/108/)\u000a\u000a\u000a### Installation\u000a\u000aNPM: \u000a\u000a```\u000anpm install paperclip\u000a```\u000a\u000aBower: \u000a\u000a```\u000abower install paperclip\u000a```\u000a\u000a## Command line usage\u000a\u000aPaperclip templates can also be compiled straight to javascript. Simply run:\u000a\u000a```\u000a./node_modules/.bin/paperclip -i ./template.pc > ./template.pc.js\u000a```\u000a\u000ato compile templates into JavaScript.\u000a\u000a#### template template(source, options)\u000a\u000aCreates a new template.\u000a\u000a- `options` - options for the template\u000a  - `components` - component classes\u000a  - `attributes` - attribute helpers\u000a  - `modifiers`  - property modifiers\u000a  - `accessor`   - property accessor for the view context\u000a\u000a```javascript\u000avar pc = require(\"paperclip\");\u000avar template = pc.template(\"hello {{name}}!\");\u000a```\u000a\u000a#### view template.view([context])\u000a\u000aCreates a new view which controls a cloned document fragment provided by the template. \u000a\u000a- `context` - Can be anything. A backbone model, ember model, vanilla object. Be\u000asure to specify the `template accessor` if this is other than plain-old object.\u000a\u000a#### view.render()\u000a\u000aReturns the cloned document fragment which can be added to the DOM.\u000a\u000a```javascript\u000avar pc = require(\"paperclip\");\u000avar template = pc.template(\"hello {{name}}!\");\u000avar view = template.view({ name: \"Bill Murray\" });\u000adocument.body.appendChild(view.render()); // will show \"hello Bill Murray\"\u000a```\u000a\u000a#### view.set(key, value)\u000a\u000aSets a property on the context of the view & updates the DOM.\u000a\u000a#### view.setProperties(properties)\u000a\u000aSets multiple properties on the view & updates the DOM.\u000a\u000a#### view.context\u000a\u000aThe context that the view is currently bound to. This can be anything.\u000a\u000a```javascript\u000avar tpl = paperclip.template(\"hello {{name}}!\");\u000avar view = tpl.view({ name: \"Will Smith\" });\u000adocument.body.appendChild(view.render());  // will show \"hello Will Smith\"\u000a\u000a// triggered whenever name has changed\u000aview.context.bind(\"name\", function (name) {\u000a  console.log(\"name has changed!\");\u000a});\u000a\u000a// only updates the elements bound to name\u000aview.context.set(\"name\", \"Oprah Winfrey\");  // will show \"hello Oprah Winfrey\"\u000a```\u000a\u000a#### view.remove()\u000a\u000aRemoves the views from the DOM.\u000a\u000a#### String paperclip.parse(source)\u000a\u000aTranslates a template into JavaScript.\u000a\u000a## Block Syntax\u000a\u000a#### {{ blocks }}\u000a\u000aVariable blocks as placeholders for information that might change. For example:\u000a\u000a<!--\u000a{\u000a  name: {\u000a    first: \"Tom\",\u000a    last: \"Hanks\"\u000a  }\u000a}\u000a-->\u000a\u000a```html\u000ahello {{ name.first }} {{ name.last }}!\u000a```\u000a\u000aYou can also specify blocks within attributes.\u000a\u000a<!--\u000a{\u000a  color: \"blue\"\u000a}\u000a-->\u000a\u000a```html\u000amy favorite color is <span style=\"color: {{color}}\">{{color}}</span>\u000a```\u000a\u000aPaperclip also supports **inline javascript**. For example:\u000a\u000a<!--\u000a{\u000a  message: undefined\u000a}\u000a-->\u000a\u000a```html\u000ahello {{ message || \"World\" }}! <br />\u000ainline-json {{ {'5+10 is':5+10, 'message is defined?' : message ? 'yes' : 'no' } | json }}\u000a```\u000a\u000a## Modifiers\u000a\u000aModifiers format data in a variable block. A good example of this might be presenting data to the user depending on their locale, or parsing data into markdown. Here's an example of how you can use modifiers:\u000a\u000a<!--\u000afunction () {\u000a\u000a  paperclip.modifier(\"divide\", function (age, number) {\u000a    return age/number;\u000a  });\u000a\u000a  paperclip.modifier(\"round\", function (number) {\u000a    return Math.round(number);\u000a  });\u000a\u000a  return {\u000a    age: 30\u000a  };\u000a}\u000a-->\u000a\u000a```html\u000aA human that is {{age}} years old is like a {{ age | divide(5.6) | round }} year old dog!\u000a```\u000a\u000a## Binding Operators\u000a\u000aPaperclip comes with various binding operators that give you full control over how references are handled. You can easily\u000aspecify whether to bind one way, two ways, or not at all. Here's the basic syntax:\u000a\u000a<!--\u000a{\u000a  name: \"Emma Stone\"\u000a}\u000a-->\u000a\u000a```html\u000aTwo-way binding:\u000a<input class=\"form-control\" value=\"{{ <~>name }}\" />\u000a\u000aBind input value to name only:\u000a<input class=\"form-control\" value=\"{{ ~>name }}\" />\u000a\u000aBind name to input value only:\u000a\u000a<input class=\"form-control\" value=\"{{ <~name }}\" />\u000a\u000aUnbound helper - don't watch for any changes:\u000a{{ ~name }}\u000a```\u000a\u000a## Built-in components\u000a\u000a#### &lt;unsafe html={{html}} /&gt;\u000a\u000aAllows unsafe HTML to be embedded in the template.\u000a\u000a<!--\u000a{\u000a  content: \"hello <strong>world</strong>!\"\u000a}\u000a-->\u000a\u000a```html\u000aUnsafe: <unsafe html={{content}} />\u000a```\u000a\u000a\u000a#### &lt;show when={{condition}} /&gt;\u000a\u000aConditional block helper\u000a\u000a<!--\u000a{\u000a  age: 24\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"What's your age?\" value=\"{{ <~>age }}\"></input>\u000a\u000a<show when={{age >= 18}}>\u000a  You're legally able to vote in the U.S.\u000a</show>\u000a\u000a<show when={{age > 16}}>\u000a  You're almost old enough to vote in the U.S.\u000a</show>\u000a\u000a<show when={{age < 16}}>\u000a  You're too young to vote in the U.S.\u000a</show>\u000a```\u000a\u000a#### &lt;switch /&gt;\u000a\u000aSwitch conditional helper\u000a\u000a<!--\u000a{\u000a  age: 24\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"What's your age?\" value=\"{{ <~>age }}\"></input>\u000a\u000a<switch>\u000a  <show when={{age >= 18}}>\u000a    You're legally able to vote in the U.S.\u000a  </show>\u000a  <show when={{age > 16}}>\u000a    You're almost old enough to vote in the U.S.\u000a  </show>\u000a  <show>\u000a    You're too young to vote in the U.S.\u000a  </show>\u000a</switch>\u000a```\u000a\u000a#### &lt;repeat each={{items}} as='item' /&gt;\u000a\u000aCreates a list of items. \u000a\u000a- `as` - property to define for each iterated item. If this is omitted, the context of the embedded\u000atemplate will be the iterated item itself.\u000a\u000a<!--\u000a{\u000a  items: _.shuffle(_.range(4))\u000a}\u000a-->\u000a\u000a```html\u000a<repeat each={{items}} as='item'>\u000a  item {{item}} <br />\u000a</repeat>\u000a\u000a<!-- also valid -->\u000a\u000a<ul repeat.each={{item}} repeat.as='item'>\u000a  <li>{{item}}</li>\u000a</ul>\u000a```\u000a\u000a#### &lt;stack state={{state}} /&gt;\u000a\u000aSimilar to switch view, matches the visible child element with the given state.\u000a\u000a```html\u000a\u000a<!-- show the home state -->\u000a<stack state='home'>\u000a  <div name='home'>\u000a  </div>\u000a  <div name='contact'>\u000a  </div>\u000a</stack>\u000a```\u000a\u000a## Attribute helpers\u000a\u000aBelow are a list of data binding attributes you can use with elements.\u000a\u000a#### value={{ context }}\u000a\u000aInput data binding\u000a\u000a<!--\u000a{\u000a  message: \"What's up?\"\u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"Type in a message\" value=\"{{ <~>message }}\"></input>\u000a<h3>{{message}}</h3>\u000a```\u000a\u000aNotice the `<~>` operator. This tells paperclip to bind both ways. See [binding operators](#binding-operators) for more info.\u000a\u000a#### onEvent={{ expression }}\u000a\u000aExecuted when an event is fired on the DOM element. Here are all the available events:\u000a\u000a- `onChange` - called when an element changes\u000a- `onClick` - called when an element is clicked\u000a- `onLoad` - called when an element loads - useful for `<img />`\u000a- `onSubmit` - called on submit - useful for `<form />`\u000a- `onMouseDown` - called on mouse down\u000a- `onMouseUp` - called on mouse up\u000a- `onMouseOver` - called on mouse over\u000a- `onMouseOut` - called on mouse out\u000a- `onKeyDown` - called on key down\u000a- `onKeyUp` - called on key up\u000a- `onEnter` - called on enter key up\u000a- `onDelete` - called on delete key up\u000a\u000a<!--\u000a{\u000a  \u000a}\u000a-->\u000a\u000a```html\u000a<input type=\"text\" class=\"form-control\" placeholder=\"Type in a message\" onEnter=\"{{ enterPressed = true }}\"></input>\u000a\u000a{{#if: enterPressed }}\u000a  enter pressed\u000a{{/}}\u000a```\u000a\u000a#### enable={{ bool }}\u000a\u000aToggles the enabled state of an element.\u000a\u000a<!--\u000a{\u000a  formIsValid: false\u000a}\u000a-->\u000a\u000a```html\u000a<button class=\"btn btn-default\" enable={{ formIsValid }}>Sign Up</button>\u000a```\u000a\u000a#### focus={{ bool }}\u000a\u000aFocuses cursor on an element.\u000a\u000a<!--\u000a{\u000a  focus: false\u000a}\u000a-->\u000a\u000a```html\u000a<input class=\"form-control\" focus={{ focus }}></input>\u000a```\u000a\u000a\u000a\u000a","bugs":{"url":"https://github.com/mojo-js/paperclip.js/issues"},"homepage":"https://github.com/mojo-js/paperclip.js","_id":"paperclip@1.2.8","_shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.10.36","_npmUser":{"name":"architectd","email":"craig.j.condon@gmail.com"},"maintainers":[{"name":"architectd","email":"craig.j.condon@gmail.com"}],"dist":{"shasum":"22cbce9b6d00b027ae6c737f9ff018cad8c33eac","tarball":"http://registry.npmjs.org/paperclip/-/paperclip-1.2.8.tgz"}}: paperclip
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
