{"name":"Paperclip.js","tagline":"reactive DOM template engine built for speed, and extensibility","body":"PaperclipJS is a tiny immutable virtual dom library for building user interfaces. It compiles HTML straight to JavaScript, and only updates the parts it needs to. This means you get Ã¼ber fast apps with a low CPU & memory footprint.\r\n\r\nPaperclip was designed for interoperability, and customization. Incorporate it into your existing application, or use it with any rendering engine (DOM, Canvas, WebGL, server-side).\r\n\r\n<br />\r\n\r\n\r\n## Any rendering engine\r\n\r\nPaperclip works with any rendering engine. Easily build sophisticated user interfaces that interoperate between DOM, WebGL, Canvas, SVG, and more. Here's a simple [pixi.js demo](https://github.com/mojo-js/paperclip.js/tree/master/examples/pixi):\r\n\r\nindex.js:\r\n\r\n```javascript\r\nvar pc = require(\"paperclip\");\r\n\r\n// register the default paperclip transpiler\r\nrequire(\"paperclip/compile/default\"); \r\n\r\nvar fs = require(\"fs\");\r\n\r\n// readFileSync works in the browser assuming you're using brfs with browserify\r\nvar template = pc.template(fs.readFileSync(__dirname + \"/template.pc\", \"utf8\"));\r\n\r\nvar view = template.view({\r\n  numBunnies: \r\n})\r\n```\r\n\r\ntemplate.pc:\r\n\r\n```html\r\nHow many bunnies? <input type=\"text\" value={{<~>numBunnies}}></input>\r\n\r\n<pixi>\r\n    <repeat each={{range(numBunnies)}} as='bunny'>\r\n    </repeat>\r\n</pixi>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}